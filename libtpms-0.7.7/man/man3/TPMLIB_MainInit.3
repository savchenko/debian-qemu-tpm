.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "TPMLIB_MainInit 3"
.TH TPMLIB_MainInit 3 "2019-03-25" "libtpms" ""
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
TPMLIB_MainInit    \- Initialize the TPM
.PP
TPMLIB_Terminate   \- Terminate the TPM
.SH "LIBRARY"
.IX Header "LIBRARY"
\&\s-1TPM\s0 library (libtpms, \-ltpms)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fB#include <libtpms/tpm_types.h\fR>
.PP
\&\fB#include <libtpms/tpm_library.h\fR>
.PP
\&\fB#include <libtpms/tpm_error.h\fR>
.PP
\&\fB\s-1TPM_RESULT\s0 TPMLIB_MainInit(void);\fR
.PP
\&\fB\s-1TPM_RESULT\s0 TPMLIB_Terminate(void);\fR
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fB\fBTPMLIB_MainInit()\fB\fR and \fB\fBTPMLIB_Terminate()\fB\fR functions are used
to initialize and terminate the \s-1TPM\s0 respectively. The \fB\fBTPMLIB_MainInit()\fB\fR
function must be called before the \s-1TPM\s0 processes any \s-1TPM\s0 command.
The \fB\fBTPMLIB_Terminate()\fB\fR function is called to free all the internal 
resources (memory allocations) the \s-1TPM\s0 has used and must be called after
the last \s-1TPM\s0 command was processed by the \s-1TPM.\s0 The \fB\fBTPMLIB_MainInit()\fB\fR
function can then be called again.
.PP
Use \fB\fBTPMLIB_RegisterCallbacks()\fB\fR to set callback functions for
initialization and writing and restoring the internal state in a
portable format.
.SH "ERRORS"
.IX Header "ERRORS"
.IP "\fB\s-1TPM_SUCCESS\s0\fR" 4
.IX Item "TPM_SUCCESS"
The function completed sucessfully.
.IP "\fB\s-1TPM_FAIL\s0\fR" 4
.IX Item "TPM_FAIL"
General failure.
.PP
For a complete list of \s-1TPM\s0 error codes please consult the include file
\&\fBlibtpms/tpm_error.h\fR
.SH "EXAMPLE"
.IX Header "EXAMPLE"
.Vb 1
\& #include <stdio.h>
\&
\& #include <libtpms/tpm_types.h>
\& #include <libtpms/tpm_library.h>
\& #include <libtpms/tpm_error.h>
\&
\& int main(void) {
\&     TPM_RESULT res;
\&     unsigned char *respbuffer = NULL;
\&     uint32_t resp_size = 0;
\&     uint32_t respbufsize = 0;
\&     unsigned char *command;
\&     uint32_t command_size;
\&
\&     [...]
\&
\&     if (TPMLIB_MainInit() != TPM_SUCCESS) {
\&         fprintf(stderr, "Could not start the TPM.\en");
\&         return 1;
\&     }
\&
\&     [...]
\&     /* build TPM command */
\&     [...]
\&
\&     res = TPMLIB_Process(&respbuffer, &resp_size,
\&                          &respbufsize,
\&                          command, command_size);
\&     [...]
\&
\&     TPMLIB_Terminate();
\&
\&     return 0;
\& }
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBTPMLIB_Process\fR(3), \fBTPMLIB_RegisterCallbacks\fR(3), \fBTPMLIB_GetVersion\fR(3)
\&\fBTPMLIB_GetTPMProperty\fR(3), \fBTPMLIB_DecodeBlob\fR(3)
